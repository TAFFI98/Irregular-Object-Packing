The main training loop iteratively performs the following steps: ​

For train_episode in range(5000)::​

    Initialize simulation​

    Load num_loaded_objects items ​

    For i in range(num_loaded_objects) ​

        If n_unpacked items == 0:​

            break​

        else:​

            Comupute heightmap of box ​

            If no remaining space in the box:​

                break​

            else:​

                If stage_1: ​

                    Order remaining objects accoding to BBox volume ​

                    Select next object to be packed according to this order​

                If stage_2: ​

      	            Order remaining objects accoding to BBox volume. ​
         
          	        Select the K objects with highest BBox volume​

                    Compute Heightmaps of the K objects (6 views) and concatenate with Box Heightmap ​

                    Run a forward pass through the Manager network to get SCORES for the next object to be packed. ​

                    Select next object to be packed according to this scores​

                For different (r,p,y) obtain heigthmaps of the remaining objects to be packed and concatenate with Box Heightmap ​

                Runs a forward pass through the worker network to get SCORES for pos (X,Y) and ori (φ, θ, ψ) of the next objec to be packed. ​

                Executes the packing action (updating variable with packed items) on the robot asynchronously in another thread. ​

                Compute reward, backpropagates, and adjusts exploration probability for training iterations. ​

                Performs experience replay . ​

                Saves model snapshots and logs information for analysis.​
                
                
                
The main testing loop iteratively performs the following steps: ​

For train_episode in range(2000):​

    Initialize simulation​

    Load num_loaded_objects items ​

    For i in range(num_loaded_objects) ​

        If n_unpacked items == 0:​

      	Compute the number of packed objects, stability, compactness and priamidality of the box​

         	break​

        else:​

            	Comupute heightmap of box ​

            	If no remaining space in the box:​

          		Compute the number of packed objects, stability, compactness and priamidality of the box​

            		break​

         	else:​

	          Order remaining objects accoding to BBox volume ​
	          
	          Select the K objects with highest BBox volume​

		      Compute Heightmaps of the K objects (6 views) and concatenate with Box Heightmap ​

		      Run a forward pass through the Manager network to get SCORES for the next object to be packed. ​

		      Select next object to be packed according to this scores​

		      For different (r,p,y) obtain heigthmaps of the remaining objects to be packed and concatenate with Box Heightmap ​

		      Runs a forward pass through the worker network to get SCORES for pos (X,Y) and ori (φ, θ, ψ) of the next objec to be packed. ​

		      Executes the packing action (updating variable with packed items) on the robot asynchronously in another thread. ​

​
